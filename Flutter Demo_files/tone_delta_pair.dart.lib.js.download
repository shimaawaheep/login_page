// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.5.3 (stable) (Wed Sep 11 16:22:47 2024 +0000) on "windows_x64"
// Module: packages/material_color_utilities/dynamiccolor/src/tone_delta_pair.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/material_color_utilities/hct/hct.dart', 'packages/material_color_utilities/dynamiccolor/src/contrast_curve.dart', 'packages/material_color_utilities/dislike/dislike_analyzer.dart', 'packages/material_color_utilities/dynamiccolor/variant.dart', 'packages/material_color_utilities/palettes/tonal_palette.dart', 'packages/material_color_utilities/utils/math_utils.dart', 'packages/material_color_utilities/contrast/contrast.dart'], (function load__packages__material_color_utilities__dynamiccolor__src__tone_delta_pair_dart(dart_sdk, packages__material_color_utilities__hct__hct$46dart, packages__material_color_utilities__dynamiccolor__src__contrast_curve$46dart, packages__material_color_utilities__dislike__dislike_analyzer$46dart, packages__material_color_utilities__dynamiccolor__variant$46dart, packages__material_color_utilities__palettes__tonal_palette$46dart, packages__material_color_utilities__utils__math_utils$46dart, packages__material_color_utilities__contrast__contrast$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const hct = packages__material_color_utilities__hct__hct$46dart.hct__hct;
  const contrast_curve = packages__material_color_utilities__dynamiccolor__src__contrast_curve$46dart.dynamiccolor__src__contrast_curve;
  const dislike_analyzer = packages__material_color_utilities__dislike__dislike_analyzer$46dart.dislike__dislike_analyzer;
  const variant = packages__material_color_utilities__dynamiccolor__variant$46dart.dynamiccolor__variant;
  const tonal_palette = packages__material_color_utilities__palettes__tonal_palette$46dart.palettes__tonal_palette;
  const math_utils = packages__material_color_utilities__utils__math_utils$46dart.utils__math_utils;
  const contrast = packages__material_color_utilities__contrast__contrast$46dart.contrast__contrast;
  var tone_delta_pair = Object.create(dart.library);
  var material_dynamic_colors = Object.create(dart.library);
  var dynamic_scheme = Object.create(dart.library);
  var dynamic_color = Object.create(dart.library);
  var $abs = dartx.abs;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $clear = dartx.clear;
  var $_set = dartx._set;
  var $add = dartx.add;
  var $round = dartx.round;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti.findType("core|String()")))(),
    ListOfTonePolarity: () => (T.ListOfTonePolarity = dart.constFn(dart_rti.findType("core|List<material_color_utilities__dynamiccolor__src__tone_delta_pair|TonePolarity>")))(),
    TonePolarity: () => (T.TonePolarity = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__src__tone_delta_pair|TonePolarity")))(),
    DynamicColor: () => (T.DynamicColor = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__dynamic_color|DynamicColor")))(),
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    DynamicSchemeToDynamicColor: () => (T.DynamicSchemeToDynamicColor = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__dynamic_color|DynamicColor(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)")))(),
    doubleAnddoubleAnddouble__Todouble: () => (T.doubleAnddoubleAnddouble__Todouble = dart.constFn(dart_rti.findType("core|double(core|double,core|double,core|double,core|bool)")))(),
    DynamicSchemeToTonalPalette: () => (T.DynamicSchemeToTonalPalette = dart.constFn(dart_rti.findType("material_color_utilities__palettes__tonal_palette|TonalPalette(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)")))(),
    DynamicSchemeTodouble: () => (T.DynamicSchemeTodouble = dart.constFn(dart_rti.findType("core|double(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)")))(),
    DynamicSchemeToToneDeltaPair: () => (T.DynamicSchemeToToneDeltaPair = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__src__tone_delta_pair|ToneDeltaPair(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)")))(),
    HctAndListOfdoubleAndListOfdoubleTodouble: () => (T.HctAndListOfdoubleAndListOfdoubleTodouble = dart.constFn(dart_rti.findType("core|double(material_color_utilities__hct__hct|Hct,core|List<core|double>,core|List<core|double>)")))(),
    DynamicColorToHct: () => (T.DynamicColorToHct = dart.constFn(dart_rti.findType("material_color_utilities__hct__hct|Hct(material_color_utilities__dynamiccolor__dynamic_color|DynamicColor)")))(),
    DynamicColorToint: () => (T.DynamicColorToint = dart.constFn(dart_rti.findType("core|int(material_color_utilities__dynamiccolor__dynamic_color|DynamicColor)")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    Hct: () => (T.Hct = dart.constFn(dart_rti.findType("material_color_utilities__hct__hct|Hct")))(),
    Variant: () => (T.Variant = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__variant|Variant")))(),
    TonalPalette: () => (T.TonalPalette = dart.constFn(dart_rti.findType("material_color_utilities__palettes__tonal_palette|TonalPalette")))(),
    DynamicScheme: () => (T.DynamicScheme = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme")))(),
    __ToDynamicColor: () => (T.__ToDynamicColor = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__dynamic_color|DynamicColor({background:material_color_utilities__dynamiccolor__dynamic_color|DynamicColor(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)?,contrastCurve:material_color_utilities__dynamiccolor__src__contrast_curve|ContrastCurve?,isBackground:core|bool,name:core|String,palette!material_color_utilities__palettes__tonal_palette|TonalPalette(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme),secondBackground:material_color_utilities__dynamiccolor__dynamic_color|DynamicColor(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)?,tone!core|double(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme),toneDeltaPair:material_color_utilities__dynamiccolor__src__tone_delta_pair|ToneDeltaPair(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)?})")))(),
    DynamicSchemeToint: () => (T.DynamicSchemeToint = dart.constFn(dart_rti.findType("core|int(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)")))(),
    DynamicSchemeToHct: () => (T.DynamicSchemeToHct = dart.constFn(dart_rti.findType("material_color_utilities__hct__hct|Hct(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)")))(),
    doubleAnddoubleTodouble: () => (T.doubleAnddoubleTodouble = dart.constFn(dart_rti.findType("core|double(core|double,core|double)")))(),
    doubleTodouble: () => (T.doubleTodouble = dart.constFn(dart_rti.findType("core|double(core|double)")))(),
    doubleTobool: () => (T.doubleTobool = dart.constFn(dart_rti.findType("core|bool(core|double)")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    DynamicSchemeToNDynamicColor: () => (T.DynamicSchemeToNDynamicColor = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__dynamic_color|DynamicColor(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)?")))(),
    ContrastCurveN: () => (T.ContrastCurveN = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__src__contrast_curve|ContrastCurve?")))(),
    DynamicSchemeToNToneDeltaPair: () => (T.DynamicSchemeToNToneDeltaPair = dart.constFn(dart_rti.findType("material_color_utilities__dynamiccolor__src__tone_delta_pair|ToneDeltaPair(material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme)?")))(),
    MapOfDynamicScheme$Hct: () => (T.MapOfDynamicScheme$Hct = dart.constFn(dart_rti.findType("core|Map<material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme,material_color_utilities__hct__hct|Hct>")))()
  };
  var G = {
    LinkedMapOfDynamicScheme$Hct: () => (G.LinkedMapOfDynamicScheme$Hct = dart.constFn(_js_helper.LinkedMap$(T.DynamicScheme(), T.Hct())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "darker",
        [_Enum_index]: 0
      }, tone_delta_pair.TonePolarity.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "lighter",
        [_Enum_index]: 1
      }, tone_delta_pair.TonePolarity.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "nearer",
        [_Enum_index]: 2
      }, tone_delta_pair.TonePolarity.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "farther",
        [_Enum_index]: 3
      }, tone_delta_pair.TonePolarity.prototype));
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], T.TonePolarity());
    }
  }, false);
  var C = Array(5).fill(void 0);
  var I = [
    "package:material_color_utilities/dynamiccolor/src/tone_delta_pair.dart",
    "dart:core",
    "package:material_color_utilities/dynamiccolor/dynamic_color.dart",
    "package:material_color_utilities/dynamiccolor/material_dynamic_colors.dart",
    "file:///C:/Users/h1971/AppData/Local/Pub/Cache/hosted/pub.dev/material_color_utilities-0.11.1/lib/dynamiccolor/dynamic_scheme.dart",
    "package:material_color_utilities/dynamiccolor/dynamic_scheme.dart",
    "package:material_color_utilities/hct/hct.dart",
    "package:material_color_utilities/dynamiccolor/variant.dart",
    "package:material_color_utilities/palettes/tonal_palette.dart",
    "package:material_color_utilities/dynamiccolor/src/contrast_curve.dart"
  ];
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  tone_delta_pair.TonePolarity = class TonePolarity extends core._Enum {
    [_enumToString]() {
      return "TonePolarity." + this[_name];
    }
  };
  (tone_delta_pair.TonePolarity.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(tone_delta_pair.TonePolarity).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = tone_delta_pair.TonePolarity.prototype;
  dart.addRtiResources(tone_delta_pair.TonePolarity, ["material_color_utilities__dynamiccolor__src__tone_delta_pair|TonePolarity"]);
  dart.setMethodSignature(tone_delta_pair.TonePolarity, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(tone_delta_pair.TonePolarity))));
  dart.setLibraryUri(tone_delta_pair.TonePolarity, I[0]);
  dart.setStaticFieldSignature(tone_delta_pair.TonePolarity, () => ['values', 'darker', 'lighter', 'nearer', 'farther']);
  dart.defineLazy(tone_delta_pair.TonePolarity, {
    /*tone_delta_pair.TonePolarity.values*/get values() {
      return C[0] || CT.C0;
    },
    /*tone_delta_pair.TonePolarity.darker*/get darker() {
      return C[1] || CT.C1;
    },
    /*tone_delta_pair.TonePolarity.lighter*/get lighter() {
      return C[2] || CT.C2;
    },
    /*tone_delta_pair.TonePolarity.nearer*/get nearer() {
      return C[3] || CT.C3;
    },
    /*tone_delta_pair.TonePolarity.farther*/get farther() {
      return C[4] || CT.C4;
    }
  }, false);
  var roleA$ = dart.privateName(tone_delta_pair, "ToneDeltaPair.roleA");
  var roleB$ = dart.privateName(tone_delta_pair, "ToneDeltaPair.roleB");
  var delta$ = dart.privateName(tone_delta_pair, "ToneDeltaPair.delta");
  var polarity$ = dart.privateName(tone_delta_pair, "ToneDeltaPair.polarity");
  var stayTogether$ = dart.privateName(tone_delta_pair, "ToneDeltaPair.stayTogether");
  tone_delta_pair.ToneDeltaPair = class ToneDeltaPair extends core.Object {
    get roleA() {
      return this[roleA$];
    }
    set roleA(value) {
      super.roleA = value;
    }
    get roleB() {
      return this[roleB$];
    }
    set roleB(value) {
      super.roleB = value;
    }
    get delta() {
      return this[delta$];
    }
    set delta(value) {
      super.delta = value;
    }
    get polarity() {
      return this[polarity$];
    }
    set polarity(value) {
      super.polarity = value;
    }
    get stayTogether() {
      return this[stayTogether$];
    }
    set stayTogether(value) {
      super.stayTogether = value;
    }
    static ['_#new#tearOff'](roleA, roleB, delta, polarity, stayTogether) {
      return new tone_delta_pair.ToneDeltaPair.new(roleA, roleB, delta, polarity, stayTogether);
    }
  };
  (tone_delta_pair.ToneDeltaPair.new = function(roleA, roleB, delta, polarity, stayTogether) {
    this[roleA$] = roleA;
    this[roleB$] = roleB;
    this[delta$] = delta;
    this[polarity$] = polarity;
    this[stayTogether$] = stayTogether;
    ;
  }).prototype = tone_delta_pair.ToneDeltaPair.prototype;
  dart.addRtiResources(tone_delta_pair.ToneDeltaPair, ["material_color_utilities__dynamiccolor__src__tone_delta_pair|ToneDeltaPair"]);
  dart.setLibraryUri(tone_delta_pair.ToneDeltaPair, I[0]);
  dart.setFieldSignature(tone_delta_pair.ToneDeltaPair, () => dart.global.Object.setPrototypeOf({
    roleA: {type: T.DynamicColor(), isConst: false, isFinal: true, libraryUri: I[2]},
    roleB: {type: T.DynamicColor(), isConst: false, isFinal: true, libraryUri: I[2]},
    delta: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    polarity: {type: T.TonePolarity(), isConst: false, isFinal: true, libraryUri: I[0]},
    stayTogether: {type: T.bool(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(tone_delta_pair.ToneDeltaPair))));
  material_dynamic_colors.MaterialDynamicColors = class MaterialDynamicColors extends core.Object {
    static highestSurface(s) {
      return s.isDark ? material_dynamic_colors.MaterialDynamicColors.surfaceBright : material_dynamic_colors.MaterialDynamicColors.surfaceDim;
    }
    static _findDesiredChromaByTone(hue, chroma, tone, byDecreasingTone) {
      let answer = tone;
      let closestToChroma = hct.Hct.from(hue, chroma, tone);
      if (closestToChroma.chroma < chroma) {
        let chromaPeak = closestToChroma.chroma;
        while (closestToChroma.chroma < chroma) {
          answer = answer + (byDecreasingTone ? -1.0 : 1.0);
          let potentialSolution = hct.Hct.from(hue, chroma, answer);
          if (chromaPeak > potentialSolution.chroma) {
            break;
          }
          if ((potentialSolution.chroma - chroma)[$abs]() < 0.4) {
            break;
          }
          let potentialDelta = (potentialSolution.chroma - chroma)[$abs]();
          let currentDelta = (closestToChroma.chroma - chroma)[$abs]();
          if (potentialDelta < currentDelta) {
            closestToChroma = potentialSolution;
          }
          chromaPeak = math.max(T.double(), chromaPeak, potentialSolution.chroma);
        }
      }
      return answer;
    }
    static ['_#new#tearOff']() {
      return new material_dynamic_colors.MaterialDynamicColors.new();
    }
  };
  (material_dynamic_colors.MaterialDynamicColors.new = function() {
    ;
  }).prototype = material_dynamic_colors.MaterialDynamicColors.prototype;
  dart.addRtiResources(material_dynamic_colors.MaterialDynamicColors, ["material_color_utilities__dynamiccolor__material_dynamic_colors|MaterialDynamicColors"]);
  dart.setStaticMethodSignature(material_dynamic_colors.MaterialDynamicColors, () => ['highestSurface', '_findDesiredChromaByTone']);
  dart.setLibraryUri(material_dynamic_colors.MaterialDynamicColors, I[3]);
  dart.setStaticFieldSignature(material_dynamic_colors.MaterialDynamicColors, () => ['contentAccentToneDelta', 'primaryPaletteKeyColor', 'secondaryPaletteKeyColor', 'tertiaryPaletteKeyColor', 'neutralPaletteKeyColor', 'neutralVariantPaletteKeyColor', 'background', 'onBackground', 'surface', 'surfaceDim', 'surfaceBright', 'surfaceContainerLowest', 'surfaceContainerLow', 'surfaceContainer', 'surfaceContainerHigh', 'surfaceContainerHighest', 'onSurface', 'surfaceVariant', 'onSurfaceVariant', 'inverseSurface', 'inverseOnSurface', 'outline', 'outlineVariant', 'shadow', 'scrim', 'surfaceTint', 'primary', 'onPrimary', 'primaryContainer', 'onPrimaryContainer', 'inversePrimary', 'secondary', 'onSecondary', 'secondaryContainer', 'onSecondaryContainer', 'tertiary', 'onTertiary', 'tertiaryContainer', 'onTertiaryContainer', 'error', 'onError', 'errorContainer', 'onErrorContainer', 'primaryFixed', 'primaryFixedDim', 'onPrimaryFixed', 'onPrimaryFixedVariant', 'secondaryFixed', 'secondaryFixedDim', 'onSecondaryFixed', 'onSecondaryFixedVariant', 'tertiaryFixed', 'tertiaryFixedDim', 'onTertiaryFixed', 'onTertiaryFixedVariant']);
  dart.defineLazy(material_dynamic_colors.MaterialDynamicColors, {
    /*material_dynamic_colors.MaterialDynamicColors.contentAccentToneDelta*/get contentAccentToneDelta() {
      return 15;
    },
    /*material_dynamic_colors.MaterialDynamicColors.primaryPaletteKeyColor*/get primaryPaletteKeyColor() {
      return dynamic_color.DynamicColor.fromPalette({name: "primary_palette_key_color", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.primaryPalette.keyColor.tone, T.DynamicSchemeTodouble())});
    },
    set primaryPaletteKeyColor(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.secondaryPaletteKeyColor*/get secondaryPaletteKeyColor() {
      return dynamic_color.DynamicColor.fromPalette({name: "secondary_palette_key_color", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.secondaryPalette.keyColor.tone, T.DynamicSchemeTodouble())});
    },
    set secondaryPaletteKeyColor(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.tertiaryPaletteKeyColor*/get tertiaryPaletteKeyColor() {
      return dynamic_color.DynamicColor.fromPalette({name: "tertiary_palette_key_color", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.tertiaryPalette.keyColor.tone, T.DynamicSchemeTodouble())});
    },
    set tertiaryPaletteKeyColor(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.neutralPaletteKeyColor*/get neutralPaletteKeyColor() {
      return dynamic_color.DynamicColor.fromPalette({name: "neutral_palette_key_color", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.neutralPalette.keyColor.tone, T.DynamicSchemeTodouble())});
    },
    set neutralPaletteKeyColor(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.neutralVariantPaletteKeyColor*/get neutralVariantPaletteKeyColor() {
      return dynamic_color.DynamicColor.fromPalette({name: "neutral_variant_palette_key_color", palette: dart.fn(s => s.neutralVariantPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.neutralVariantPalette.keyColor.tone, T.DynamicSchemeTodouble())});
    },
    set neutralVariantPaletteKeyColor(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.background*/get background() {
      return dynamic_color.DynamicColor.fromPalette({name: "background", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 6.0 : 98.0, T.DynamicSchemeTodouble()), isBackground: true});
    },
    set background(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onBackground*/get onBackground() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_background", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 90.0 : 10.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.background, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 3.0, 4.5, 7.0)});
    },
    set onBackground(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surface*/get surface() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 6.0 : 98.0, T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surface(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceDim*/get surfaceDim() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_dim", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 6.0 : new contrast_curve.ContrastCurve.new(87.0, 87.0, 80.0, 75.0).get(s.contrastLevel), T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceDim(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceBright*/get surfaceBright() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_bright", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? new contrast_curve.ContrastCurve.new(24.0, 24.0, 29.0, 34.0).get(s.contrastLevel) : 98.0, T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceBright(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceContainerLowest*/get surfaceContainerLowest() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_container_lowest", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? new contrast_curve.ContrastCurve.new(4.0, 4.0, 2.0, 0.0).get(s.contrastLevel) : 100.0, T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceContainerLowest(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceContainerLow*/get surfaceContainerLow() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_container_low", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? new contrast_curve.ContrastCurve.new(10.0, 10.0, 11.0, 12.0).get(s.contrastLevel) : new contrast_curve.ContrastCurve.new(96.0, 96.0, 96.0, 95.0).get(s.contrastLevel), T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceContainerLow(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceContainer*/get surfaceContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_container", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? new contrast_curve.ContrastCurve.new(12.0, 12.0, 16.0, 20.0).get(s.contrastLevel) : new contrast_curve.ContrastCurve.new(94.0, 94.0, 92.0, 90.0).get(s.contrastLevel), T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceContainerHigh*/get surfaceContainerHigh() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_container_high", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? new contrast_curve.ContrastCurve.new(17.0, 17.0, 21.0, 25.0).get(s.contrastLevel) : new contrast_curve.ContrastCurve.new(92.0, 92.0, 88.0, 85.0).get(s.contrastLevel), T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceContainerHigh(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceContainerHighest*/get surfaceContainerHighest() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_container_highest", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? new contrast_curve.ContrastCurve.new(22.0, 22.0, 26.0, 30.0).get(s.contrastLevel) : new contrast_curve.ContrastCurve.new(90.0, 90.0, 84.0, 80.0).get(s.contrastLevel), T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceContainerHighest(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onSurface*/get onSurface() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_surface", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 90.0 : 10.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onSurface(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceVariant*/get surfaceVariant() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_variant", palette: dart.fn(s => s.neutralVariantPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 30.0 : 90.0, T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceVariant(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onSurfaceVariant*/get onSurfaceVariant() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_surface_variant", palette: dart.fn(s => s.neutralVariantPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 80.0 : 30.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 11.0)});
    },
    set onSurfaceVariant(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.inverseSurface*/get inverseSurface() {
      return dynamic_color.DynamicColor.fromPalette({name: "inverse_surface", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 90.0 : 20.0, T.DynamicSchemeTodouble())});
    },
    set inverseSurface(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.inverseOnSurface*/get inverseOnSurface() {
      return dynamic_color.DynamicColor.fromPalette({name: "inverse_on_surface", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 20.0 : 95.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.inverseSurface, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set inverseOnSurface(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.outline*/get outline() {
      return dynamic_color.DynamicColor.fromPalette({name: "outline", palette: dart.fn(s => s.neutralVariantPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 60.0 : 50.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.5, 3.0, 4.5, 7.0)});
    },
    set outline(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.outlineVariant*/get outlineVariant() {
      return dynamic_color.DynamicColor.fromPalette({name: "outline_variant", palette: dart.fn(s => s.neutralVariantPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 30.0 : 80.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5)});
    },
    set outlineVariant(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.shadow*/get shadow() {
      return dynamic_color.DynamicColor.fromPalette({name: "shadow", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => 0.0, T.DynamicSchemeTodouble())});
    },
    set shadow(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.scrim*/get scrim() {
      return dynamic_color.DynamicColor.fromPalette({name: "scrim", palette: dart.fn(s => s.neutralPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => 0.0, T.DynamicSchemeTodouble())});
    },
    set scrim(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.surfaceTint*/get surfaceTint() {
      return dynamic_color.DynamicColor.fromPalette({name: "surface_tint", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 80.0 : 40.0, T.DynamicSchemeTodouble()), isBackground: true});
    },
    set surfaceTint(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.primary*/get primary() {
      return dynamic_color.DynamicColor.fromPalette({name: "primary", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 100.0 : 0.0;
          }
          return s.isDark ? 80.0 : 40.0;
        }, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 7.0), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.primaryContainer, material_dynamic_colors.MaterialDynamicColors.primary, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set primary(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onPrimary*/get onPrimary() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_primary", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 10.0 : 90.0;
          }
          return s.isDark ? 20.0 : 100.0;
        }, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.primary, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onPrimary(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.primaryContainer*/get primaryContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "primary_container", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          if (material_dynamic_colors._isFidelity(s)) {
            return s.sourceColorHct.tone;
          }
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 85.0 : 25.0;
          }
          return s.isDark ? 30.0 : 90.0;
        }, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.primaryContainer, material_dynamic_colors.MaterialDynamicColors.primary, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set primaryContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onPrimaryContainer*/get onPrimaryContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_primary_container", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          let t$363, t$362;
          if (material_dynamic_colors._isFidelity(s)) {
            return dynamic_color.DynamicColor.foregroundTone((t$362 = material_dynamic_colors.MaterialDynamicColors.primaryContainer, t$363 = s, t$362.tone(t$363)), 4.5);
          }
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 0.0 : 100.0;
          }
          return s.isDark ? 90.0 : 10.0;
        }, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.primaryContainer, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onPrimaryContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.inversePrimary*/get inversePrimary() {
      return dynamic_color.DynamicColor.fromPalette({name: "inverse_primary", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 40.0 : 80.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.inverseSurface, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 7.0)});
    },
    set inversePrimary(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.secondary*/get secondary() {
      return dynamic_color.DynamicColor.fromPalette({name: "secondary", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 80.0 : 40.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 7.0), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.secondaryContainer, material_dynamic_colors.MaterialDynamicColors.secondary, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set secondary(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onSecondary*/get onSecondary() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_secondary", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 10.0 : 100.0;
          } else {
            return s.isDark ? 20.0 : 100.0;
          }
        }, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.secondary, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onSecondary(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.secondaryContainer*/get secondaryContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "secondary_container", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          let initialTone = s.isDark ? 30.0 : 90.0;
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 30.0 : 85.0;
          }
          if (!material_dynamic_colors._isFidelity(s)) {
            return initialTone;
          }
          return material_dynamic_colors.MaterialDynamicColors._findDesiredChromaByTone(s.secondaryPalette.hue, s.secondaryPalette.chroma, initialTone, s.isDark ? false : true);
        }, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.secondaryContainer, material_dynamic_colors.MaterialDynamicColors.secondary, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set secondaryContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onSecondaryContainer*/get onSecondaryContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_secondary_container", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          let t$363, t$362;
          if (!material_dynamic_colors._isFidelity(s)) {
            return s.isDark ? 90.0 : 10.0;
          }
          return dynamic_color.DynamicColor.foregroundTone((t$362 = material_dynamic_colors.MaterialDynamicColors.secondaryContainer, t$363 = s, t$362.tone(t$363)), 4.5);
        }, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.secondaryContainer, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onSecondaryContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.tertiary*/get tertiary() {
      return dynamic_color.DynamicColor.fromPalette({name: "tertiary", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 90.0 : 25.0;
          }
          return s.isDark ? 80.0 : 40.0;
        }, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 7.0), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.tertiaryContainer, material_dynamic_colors.MaterialDynamicColors.tertiary, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set tertiary(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onTertiary*/get onTertiary() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_tertiary", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 10.0 : 90.0;
          }
          return s.isDark ? 20.0 : 100.0;
        }, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.tertiary, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onTertiary(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.tertiaryContainer*/get tertiaryContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "tertiary_container", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 60.0 : 49.0;
          }
          if (!material_dynamic_colors._isFidelity(s)) {
            return s.isDark ? 30.0 : 90.0;
          }
          let proposedHct = s.tertiaryPalette.getHct(s.sourceColorHct.tone);
          return dislike_analyzer.DislikeAnalyzer.fixIfDisliked(proposedHct).tone;
        }, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.tertiaryContainer, material_dynamic_colors.MaterialDynamicColors.tertiary, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set tertiaryContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onTertiaryContainer*/get onTertiaryContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_tertiary_container", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => {
          let t$363, t$362;
          if (material_dynamic_colors._isMonochrome(s)) {
            return s.isDark ? 0.0 : 100.0;
          }
          if (!material_dynamic_colors._isFidelity(s)) {
            return s.isDark ? 90.0 : 10.0;
          }
          return dynamic_color.DynamicColor.foregroundTone((t$362 = material_dynamic_colors.MaterialDynamicColors.tertiaryContainer, t$363 = s, t$362.tone(t$363)), 4.5);
        }, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.tertiaryContainer, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onTertiaryContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.error*/get error() {
      return dynamic_color.DynamicColor.fromPalette({name: "error", palette: dart.fn(s => s.errorPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 80.0 : 40.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 7.0), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.errorContainer, material_dynamic_colors.MaterialDynamicColors.error, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set error(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onError*/get onError() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_error", palette: dart.fn(s => s.errorPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 20.0 : 100.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.error, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onError(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.errorContainer*/get errorContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "error_container", palette: dart.fn(s => s.errorPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 30.0 : 90.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.errorContainer, material_dynamic_colors.MaterialDynamicColors.error, 10.0, tone_delta_pair.TonePolarity.nearer, false), T.DynamicSchemeToToneDeltaPair())});
    },
    set errorContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onErrorContainer*/get onErrorContainer() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_error_container", palette: dart.fn(s => s.errorPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => s.isDark ? 90.0 : 10.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.errorContainer, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onErrorContainer(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.primaryFixed*/get primaryFixed() {
      return dynamic_color.DynamicColor.fromPalette({name: "primary_fixed", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 40.0 : 90.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.primaryFixed, material_dynamic_colors.MaterialDynamicColors.primaryFixedDim, 10.0, tone_delta_pair.TonePolarity.lighter, true), T.DynamicSchemeToToneDeltaPair())});
    },
    set primaryFixed(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.primaryFixedDim*/get primaryFixedDim() {
      return dynamic_color.DynamicColor.fromPalette({name: "primary_fixed_dim", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 30.0 : 80.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.primaryFixed, material_dynamic_colors.MaterialDynamicColors.primaryFixedDim, 10.0, tone_delta_pair.TonePolarity.lighter, true), T.DynamicSchemeToToneDeltaPair())});
    },
    set primaryFixedDim(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onPrimaryFixed*/get onPrimaryFixed() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_primary_fixed", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 100.0 : 10.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.primaryFixedDim, T.DynamicSchemeToDynamicColor()), secondBackground: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.primaryFixed, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onPrimaryFixed(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onPrimaryFixedVariant*/get onPrimaryFixedVariant() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_primary_fixed_variant", palette: dart.fn(s => s.primaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 90.0 : 30.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.primaryFixedDim, T.DynamicSchemeToDynamicColor()), secondBackground: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.primaryFixed, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 11.0)});
    },
    set onPrimaryFixedVariant(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.secondaryFixed*/get secondaryFixed() {
      return dynamic_color.DynamicColor.fromPalette({name: "secondary_fixed", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 80.0 : 90.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.secondaryFixed, material_dynamic_colors.MaterialDynamicColors.secondaryFixedDim, 10.0, tone_delta_pair.TonePolarity.lighter, true), T.DynamicSchemeToToneDeltaPair())});
    },
    set secondaryFixed(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.secondaryFixedDim*/get secondaryFixedDim() {
      return dynamic_color.DynamicColor.fromPalette({name: "secondary_fixed_dim", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 70.0 : 80.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.secondaryFixed, material_dynamic_colors.MaterialDynamicColors.secondaryFixedDim, 10.0, tone_delta_pair.TonePolarity.lighter, true), T.DynamicSchemeToToneDeltaPair())});
    },
    set secondaryFixedDim(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onSecondaryFixed*/get onSecondaryFixed() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_secondary_fixed", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => 10.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.secondaryFixedDim, T.DynamicSchemeToDynamicColor()), secondBackground: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.secondaryFixed, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onSecondaryFixed(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onSecondaryFixedVariant*/get onSecondaryFixedVariant() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_secondary_fixed_variant", palette: dart.fn(s => s.secondaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 25.0 : 30.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.secondaryFixedDim, T.DynamicSchemeToDynamicColor()), secondBackground: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.secondaryFixed, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 11.0)});
    },
    set onSecondaryFixedVariant(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.tertiaryFixed*/get tertiaryFixed() {
      return dynamic_color.DynamicColor.fromPalette({name: "tertiary_fixed", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 40.0 : 90.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.tertiaryFixed, material_dynamic_colors.MaterialDynamicColors.tertiaryFixedDim, 10.0, tone_delta_pair.TonePolarity.lighter, true), T.DynamicSchemeToToneDeltaPair())});
    },
    set tertiaryFixed(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.tertiaryFixedDim*/get tertiaryFixedDim() {
      return dynamic_color.DynamicColor.fromPalette({name: "tertiary_fixed_dim", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 30.0 : 80.0, T.DynamicSchemeTodouble()), isBackground: true, background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.highestSurface(s), T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(1.0, 1.0, 3.0, 4.5), toneDeltaPair: dart.fn(s => new tone_delta_pair.ToneDeltaPair.new(material_dynamic_colors.MaterialDynamicColors.tertiaryFixed, material_dynamic_colors.MaterialDynamicColors.tertiaryFixedDim, 10.0, tone_delta_pair.TonePolarity.lighter, true), T.DynamicSchemeToToneDeltaPair())});
    },
    set tertiaryFixedDim(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onTertiaryFixed*/get onTertiaryFixed() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_tertiary_fixed", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 100.0 : 10.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.tertiaryFixedDim, T.DynamicSchemeToDynamicColor()), secondBackground: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.tertiaryFixed, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(4.5, 7.0, 11.0, 21.0)});
    },
    set onTertiaryFixed(value) {},
    /*material_dynamic_colors.MaterialDynamicColors.onTertiaryFixedVariant*/get onTertiaryFixedVariant() {
      return dynamic_color.DynamicColor.fromPalette({name: "on_tertiary_fixed_variant", palette: dart.fn(s => s.tertiaryPalette, T.DynamicSchemeToTonalPalette()), tone: dart.fn(s => material_dynamic_colors._isMonochrome(s) ? 90.0 : 30.0, T.DynamicSchemeTodouble()), background: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.tertiaryFixedDim, T.DynamicSchemeToDynamicColor()), secondBackground: dart.fn(s => material_dynamic_colors.MaterialDynamicColors.tertiaryFixed, T.DynamicSchemeToDynamicColor()), contrastCurve: new contrast_curve.ContrastCurve.new(3.0, 4.5, 7.0, 11.0)});
    },
    set onTertiaryFixedVariant(value) {}
  }, false);
  material_dynamic_colors._isFidelity = function _isFidelity(scheme) {
    return scheme.variant === variant.Variant.fidelity || scheme.variant === variant.Variant.content;
  };
  material_dynamic_colors._isMonochrome = function _isMonochrome(scheme) {
    return scheme.variant === variant.Variant.monochrome;
  };
  var sourceColorArgb$ = dart.privateName(dynamic_scheme, "DynamicScheme.sourceColorArgb");
  var sourceColorHct = dart.privateName(dynamic_scheme, "DynamicScheme.sourceColorHct");
  var variant$ = dart.privateName(dynamic_scheme, "DynamicScheme.variant");
  var isDark$ = dart.privateName(dynamic_scheme, "DynamicScheme.isDark");
  var contrastLevel$ = dart.privateName(dynamic_scheme, "DynamicScheme.contrastLevel");
  var primaryPalette$ = dart.privateName(dynamic_scheme, "DynamicScheme.primaryPalette");
  var secondaryPalette$ = dart.privateName(dynamic_scheme, "DynamicScheme.secondaryPalette");
  var tertiaryPalette$ = dart.privateName(dynamic_scheme, "DynamicScheme.tertiaryPalette");
  var neutralPalette$ = dart.privateName(dynamic_scheme, "DynamicScheme.neutralPalette");
  var neutralVariantPalette$ = dart.privateName(dynamic_scheme, "DynamicScheme.neutralVariantPalette");
  var errorPalette = dart.privateName(dynamic_scheme, "DynamicScheme.errorPalette");
  dynamic_scheme.DynamicScheme = class DynamicScheme extends core.Object {
    get sourceColorArgb() {
      return this[sourceColorArgb$];
    }
    set sourceColorArgb(value) {
      super.sourceColorArgb = value;
    }
    get sourceColorHct() {
      return this[sourceColorHct];
    }
    set sourceColorHct(value) {
      super.sourceColorHct = value;
    }
    get variant() {
      return this[variant$];
    }
    set variant(value) {
      super.variant = value;
    }
    get isDark() {
      return this[isDark$];
    }
    set isDark(value) {
      super.isDark = value;
    }
    get contrastLevel() {
      return this[contrastLevel$];
    }
    set contrastLevel(value) {
      super.contrastLevel = value;
    }
    get primaryPalette() {
      return this[primaryPalette$];
    }
    set primaryPalette(value) {
      super.primaryPalette = value;
    }
    get secondaryPalette() {
      return this[secondaryPalette$];
    }
    set secondaryPalette(value) {
      super.secondaryPalette = value;
    }
    get tertiaryPalette() {
      return this[tertiaryPalette$];
    }
    set tertiaryPalette(value) {
      super.tertiaryPalette = value;
    }
    get neutralPalette() {
      return this[neutralPalette$];
    }
    set neutralPalette(value) {
      super.neutralPalette = value;
    }
    get neutralVariantPalette() {
      return this[neutralVariantPalette$];
    }
    set neutralVariantPalette(value) {
      super.neutralVariantPalette = value;
    }
    get errorPalette() {
      return this[errorPalette];
    }
    set errorPalette(value) {
      super.errorPalette = value;
    }
    static ['_#new#tearOff'](opts) {
      let sourceColorArgb = opts && 'sourceColorArgb' in opts ? opts.sourceColorArgb : null;
      let variant = opts && 'variant' in opts ? opts.variant : null;
      let contrastLevel = opts && 'contrastLevel' in opts ? opts.contrastLevel : 0;
      let isDark = opts && 'isDark' in opts ? opts.isDark : null;
      let primaryPalette = opts && 'primaryPalette' in opts ? opts.primaryPalette : null;
      let secondaryPalette = opts && 'secondaryPalette' in opts ? opts.secondaryPalette : null;
      let tertiaryPalette = opts && 'tertiaryPalette' in opts ? opts.tertiaryPalette : null;
      let neutralPalette = opts && 'neutralPalette' in opts ? opts.neutralPalette : null;
      let neutralVariantPalette = opts && 'neutralVariantPalette' in opts ? opts.neutralVariantPalette : null;
      return new dynamic_scheme.DynamicScheme.new({sourceColorArgb: sourceColorArgb, variant: variant, contrastLevel: contrastLevel, isDark: isDark, primaryPalette: primaryPalette, secondaryPalette: secondaryPalette, tertiaryPalette: tertiaryPalette, neutralPalette: neutralPalette, neutralVariantPalette: neutralVariantPalette});
    }
    static getRotatedHue(sourceColor, hues, rotations) {
      let sourceHue = sourceColor.hue;
      if (!(hues[$length] === rotations[$length])) dart.assertFailed(null, I[4], 85, 12, "hues.length == rotations.length");
      if (rotations[$length] === 1) {
        return math_utils.MathUtils.sanitizeDegreesDouble(sourceColor.hue + rotations[$_get](0));
      }
      let size = hues[$length];
      for (let i = 0; i <= size - 2; i = i + 1) {
        let thisHue = hues[$_get](i);
        let nextHue = hues[$_get](i + 1);
        if (thisHue < sourceHue && sourceHue < nextHue) {
          return math_utils.MathUtils.sanitizeDegreesDouble(sourceHue + rotations[$_get](i));
        }
      }
      return sourceHue;
    }
    getHct(dynamicColor) {
      return dynamicColor.getHct(this);
    }
    getArgb(dynamicColor) {
      return dynamicColor.getArgb(this);
    }
    get primaryPaletteKeyColor() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.primaryPaletteKeyColor);
    }
    get secondaryPaletteKeyColor() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.secondaryPaletteKeyColor);
    }
    get tertiaryPaletteKeyColor() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.tertiaryPaletteKeyColor);
    }
    get neutralPaletteKeyColor() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.neutralPaletteKeyColor);
    }
    get neutralVariantPaletteKeyColor() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.neutralVariantPaletteKeyColor);
    }
    get background() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.background);
    }
    get onBackground() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onBackground);
    }
    get surface() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surface);
    }
    get surfaceDim() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceDim);
    }
    get surfaceBright() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceBright);
    }
    get surfaceContainerLowest() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceContainerLowest);
    }
    get surfaceContainerLow() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceContainerLow);
    }
    get surfaceContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceContainer);
    }
    get surfaceContainerHigh() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceContainerHigh);
    }
    get surfaceContainerHighest() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceContainerHighest);
    }
    get onSurface() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onSurface);
    }
    get surfaceVariant() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceVariant);
    }
    get onSurfaceVariant() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onSurfaceVariant);
    }
    get inverseSurface() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.inverseSurface);
    }
    get inverseOnSurface() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.inverseOnSurface);
    }
    get outline() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.outline);
    }
    get outlineVariant() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.outlineVariant);
    }
    get shadow() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.shadow);
    }
    get scrim() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.scrim);
    }
    get surfaceTint() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.surfaceTint);
    }
    get primary() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.primary);
    }
    get onPrimary() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onPrimary);
    }
    get primaryContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.primaryContainer);
    }
    get onPrimaryContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onPrimaryContainer);
    }
    get inversePrimary() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.inversePrimary);
    }
    get secondary() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.secondary);
    }
    get onSecondary() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onSecondary);
    }
    get secondaryContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.secondaryContainer);
    }
    get onSecondaryContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onSecondaryContainer);
    }
    get tertiary() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.tertiary);
    }
    get onTertiary() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onTertiary);
    }
    get tertiaryContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.tertiaryContainer);
    }
    get onTertiaryContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onTertiaryContainer);
    }
    get error() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.error);
    }
    get onError() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onError);
    }
    get errorContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.errorContainer);
    }
    get onErrorContainer() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onErrorContainer);
    }
    get primaryFixed() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.primaryFixed);
    }
    get primaryFixedDim() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.primaryFixedDim);
    }
    get onPrimaryFixed() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onPrimaryFixed);
    }
    get onPrimaryFixedVariant() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onPrimaryFixedVariant);
    }
    get secondaryFixed() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.secondaryFixed);
    }
    get secondaryFixedDim() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.secondaryFixedDim);
    }
    get onSecondaryFixed() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onSecondaryFixed);
    }
    get onSecondaryFixedVariant() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onSecondaryFixedVariant);
    }
    get tertiaryFixed() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.tertiaryFixed);
    }
    get tertiaryFixedDim() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.tertiaryFixedDim);
    }
    get onTertiaryFixed() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onTertiaryFixed);
    }
    get onTertiaryFixedVariant() {
      return this.getArgb(material_dynamic_colors.MaterialDynamicColors.onTertiaryFixedVariant);
    }
  };
  (dynamic_scheme.DynamicScheme.new = function(opts) {
    let sourceColorArgb = opts && 'sourceColorArgb' in opts ? opts.sourceColorArgb : null;
    let variant = opts && 'variant' in opts ? opts.variant : null;
    let contrastLevel = opts && 'contrastLevel' in opts ? opts.contrastLevel : 0;
    let isDark = opts && 'isDark' in opts ? opts.isDark : null;
    let primaryPalette = opts && 'primaryPalette' in opts ? opts.primaryPalette : null;
    let secondaryPalette = opts && 'secondaryPalette' in opts ? opts.secondaryPalette : null;
    let tertiaryPalette = opts && 'tertiaryPalette' in opts ? opts.tertiaryPalette : null;
    let neutralPalette = opts && 'neutralPalette' in opts ? opts.neutralPalette : null;
    let neutralVariantPalette = opts && 'neutralVariantPalette' in opts ? opts.neutralVariantPalette : null;
    this[sourceColorArgb$] = sourceColorArgb;
    this[variant$] = variant;
    this[contrastLevel$] = contrastLevel;
    this[isDark$] = isDark;
    this[primaryPalette$] = primaryPalette;
    this[secondaryPalette$] = secondaryPalette;
    this[tertiaryPalette$] = tertiaryPalette;
    this[neutralPalette$] = neutralPalette;
    this[neutralVariantPalette$] = neutralVariantPalette;
    this[sourceColorHct] = hct.Hct.fromInt(sourceColorArgb);
    this[errorPalette] = tonal_palette.TonalPalette.of(25.0, 84.0);
    ;
  }).prototype = dynamic_scheme.DynamicScheme.prototype;
  dart.addRtiResources(dynamic_scheme.DynamicScheme, ["material_color_utilities__dynamiccolor__dynamic_scheme|DynamicScheme"]);
  dart.setMethodSignature(dynamic_scheme.DynamicScheme, () => dart.global.Object.setPrototypeOf({
    getHct: T.DynamicColorToHct(),
    getArgb: T.DynamicColorToint()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(dynamic_scheme.DynamicScheme))));
  dart.setStaticMethodSignature(dynamic_scheme.DynamicScheme, () => ['getRotatedHue']);
  dart.setGetterSignature(dynamic_scheme.DynamicScheme, () => dart.global.Object.setPrototypeOf({
    primaryPaletteKeyColor: T.int(),
    secondaryPaletteKeyColor: T.int(),
    tertiaryPaletteKeyColor: T.int(),
    neutralPaletteKeyColor: T.int(),
    neutralVariantPaletteKeyColor: T.int(),
    background: T.int(),
    onBackground: T.int(),
    surface: T.int(),
    surfaceDim: T.int(),
    surfaceBright: T.int(),
    surfaceContainerLowest: T.int(),
    surfaceContainerLow: T.int(),
    surfaceContainer: T.int(),
    surfaceContainerHigh: T.int(),
    surfaceContainerHighest: T.int(),
    onSurface: T.int(),
    surfaceVariant: T.int(),
    onSurfaceVariant: T.int(),
    inverseSurface: T.int(),
    inverseOnSurface: T.int(),
    outline: T.int(),
    outlineVariant: T.int(),
    shadow: T.int(),
    scrim: T.int(),
    surfaceTint: T.int(),
    primary: T.int(),
    onPrimary: T.int(),
    primaryContainer: T.int(),
    onPrimaryContainer: T.int(),
    inversePrimary: T.int(),
    secondary: T.int(),
    onSecondary: T.int(),
    secondaryContainer: T.int(),
    onSecondaryContainer: T.int(),
    tertiary: T.int(),
    onTertiary: T.int(),
    tertiaryContainer: T.int(),
    onTertiaryContainer: T.int(),
    error: T.int(),
    onError: T.int(),
    errorContainer: T.int(),
    onErrorContainer: T.int(),
    primaryFixed: T.int(),
    primaryFixedDim: T.int(),
    onPrimaryFixed: T.int(),
    onPrimaryFixedVariant: T.int(),
    secondaryFixed: T.int(),
    secondaryFixedDim: T.int(),
    onSecondaryFixed: T.int(),
    onSecondaryFixedVariant: T.int(),
    tertiaryFixed: T.int(),
    tertiaryFixedDim: T.int(),
    onTertiaryFixed: T.int(),
    onTertiaryFixedVariant: T.int()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(dynamic_scheme.DynamicScheme))));
  dart.setLibraryUri(dynamic_scheme.DynamicScheme, I[5]);
  dart.setFieldSignature(dynamic_scheme.DynamicScheme, () => dart.global.Object.setPrototypeOf({
    sourceColorArgb: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    sourceColorHct: {type: T.Hct(), isConst: false, isFinal: true, libraryUri: I[6]},
    variant: {type: T.Variant(), isConst: false, isFinal: true, libraryUri: I[7]},
    isDark: {type: T.bool(), isConst: false, isFinal: true, libraryUri: I[1]},
    contrastLevel: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    primaryPalette: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[8]},
    secondaryPalette: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[8]},
    tertiaryPalette: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[8]},
    neutralPalette: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[8]},
    neutralVariantPalette: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[8]},
    errorPalette: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[8]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(dynamic_scheme.DynamicScheme))));
  var name$ = dart.privateName(dynamic_color, "DynamicColor.name");
  var palette$ = dart.privateName(dynamic_color, "DynamicColor.palette");
  var tone$ = dart.privateName(dynamic_color, "DynamicColor.tone");
  var isBackground$ = dart.privateName(dynamic_color, "DynamicColor.isBackground");
  var background$ = dart.privateName(dynamic_color, "DynamicColor.background");
  var secondBackground$ = dart.privateName(dynamic_color, "DynamicColor.secondBackground");
  var contrastCurve$ = dart.privateName(dynamic_color, "DynamicColor.contrastCurve");
  var toneDeltaPair$ = dart.privateName(dynamic_color, "DynamicColor.toneDeltaPair");
  var _hctCache = dart.privateName(dynamic_color, "_hctCache");
  var _as = dart.privateName(dart_rti, "_as");
  dynamic_color.DynamicColor = class DynamicColor extends core.Object {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get palette() {
      return this[palette$];
    }
    set palette(value) {
      super.palette = value;
    }
    get tone() {
      return this[tone$];
    }
    set tone(value) {
      super.tone = value;
    }
    get isBackground() {
      return this[isBackground$];
    }
    set isBackground(value) {
      super.isBackground = value;
    }
    get background() {
      return this[background$];
    }
    set background(value) {
      super.background = value;
    }
    get secondBackground() {
      return this[secondBackground$];
    }
    set secondBackground(value) {
      super.secondBackground = value;
    }
    get contrastCurve() {
      return this[contrastCurve$];
    }
    set contrastCurve(value) {
      super.contrastCurve = value;
    }
    get toneDeltaPair() {
      return this[toneDeltaPair$];
    }
    set toneDeltaPair(value) {
      super.toneDeltaPair = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let palette = opts && 'palette' in opts ? opts.palette : null;
      let tone = opts && 'tone' in opts ? opts.tone : null;
      let isBackground = opts && 'isBackground' in opts ? opts.isBackground : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let secondBackground = opts && 'secondBackground' in opts ? opts.secondBackground : null;
      let contrastCurve = opts && 'contrastCurve' in opts ? opts.contrastCurve : null;
      let toneDeltaPair = opts && 'toneDeltaPair' in opts ? opts.toneDeltaPair : null;
      return new dynamic_color.DynamicColor.new({name: name, palette: palette, tone: tone, isBackground: isBackground, background: background, secondBackground: secondBackground, contrastCurve: contrastCurve, toneDeltaPair: toneDeltaPair});
    }
    static fromPalette(opts) {
      let name = opts && 'name' in opts ? opts.name : "";
      let palette = opts && 'palette' in opts ? opts.palette : null;
      let tone = opts && 'tone' in opts ? opts.tone : null;
      let isBackground = opts && 'isBackground' in opts ? opts.isBackground : false;
      let background = opts && 'background' in opts ? opts.background : null;
      let secondBackground = opts && 'secondBackground' in opts ? opts.secondBackground : null;
      let contrastCurve = opts && 'contrastCurve' in opts ? opts.contrastCurve : null;
      let toneDeltaPair = opts && 'toneDeltaPair' in opts ? opts.toneDeltaPair : null;
      return new dynamic_color.DynamicColor.new({name: name, palette: palette, tone: tone, isBackground: isBackground, background: background, secondBackground: secondBackground, contrastCurve: contrastCurve, toneDeltaPair: toneDeltaPair});
    }
    static ['_#fromPalette#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : "";
      let palette = opts && 'palette' in opts ? opts.palette : null;
      let tone = opts && 'tone' in opts ? opts.tone : null;
      let isBackground = opts && 'isBackground' in opts ? opts.isBackground : false;
      let background = opts && 'background' in opts ? opts.background : null;
      let secondBackground = opts && 'secondBackground' in opts ? opts.secondBackground : null;
      let contrastCurve = opts && 'contrastCurve' in opts ? opts.contrastCurve : null;
      let toneDeltaPair = opts && 'toneDeltaPair' in opts ? opts.toneDeltaPair : null;
      return dynamic_color.DynamicColor.fromPalette({name: name, palette: palette, tone: tone, isBackground: isBackground, background: background, secondBackground: secondBackground, contrastCurve: contrastCurve, toneDeltaPair: toneDeltaPair});
    }
    getArgb(scheme) {
      return this.getHct(scheme).toInt();
    }
    getHct(scheme) {
      let t$362;
      let cachedAnswer = this[_hctCache][$_get](scheme);
      if (cachedAnswer != null) {
        return cachedAnswer;
      }
      let tone = this.getTone(scheme);
      let answer = (t$362 = scheme, this.palette(t$362)).getHct(tone);
      if (this[_hctCache][$length] > 4) {
        this[_hctCache][$clear]();
      }
      this[_hctCache][$_set](scheme, answer);
      return answer;
    }
    getTone(scheme) {
      let t$363, t$362, t$363$, t$362$, t$362$0;
      let decreasingContrast = scheme.contrastLevel < 0;
      if (this.toneDeltaPair != null) {
        let pair = dart.nullCheck(this.toneDeltaPair)(scheme);
        let roleA = pair.roleA;
        let roleB = pair.roleB;
        let delta = pair.delta;
        let polarity = pair.polarity;
        let stayTogether = pair.stayTogether;
        let bg = dart.nullCheck(this.background)(scheme);
        let bgTone = bg.getTone(scheme);
        let aIsNearer = polarity === tone_delta_pair.TonePolarity.nearer || polarity === tone_delta_pair.TonePolarity.lighter && !scheme.isDark || polarity === tone_delta_pair.TonePolarity.darker && scheme.isDark;
        let nearer = aIsNearer ? roleA : roleB;
        let farther = aIsNearer ? roleB : roleA;
        let amNearer = this.name === nearer.name;
        let expansionDir = scheme.isDark ? 1 : -1;
        let nContrast = dart.nullCheck(nearer.contrastCurve).get(scheme.contrastLevel);
        let fContrast = dart.nullCheck(farther.contrastCurve).get(scheme.contrastLevel);
        let nInitialTone = (t$362 = nearer, t$363 = scheme, t$362.tone(t$363));
        let nTone = contrast.Contrast.ratioOfTones(bgTone, nInitialTone) >= nContrast ? nInitialTone : dynamic_color.DynamicColor.foregroundTone(bgTone, nContrast);
        let fInitialTone = (t$362$ = farther, t$363$ = scheme, t$362$.tone(t$363$));
        let fTone = contrast.Contrast.ratioOfTones(bgTone, fInitialTone) >= fContrast ? fInitialTone : dynamic_color.DynamicColor.foregroundTone(bgTone, fContrast);
        if (decreasingContrast) {
          nTone = dynamic_color.DynamicColor.foregroundTone(bgTone, nContrast);
          fTone = dynamic_color.DynamicColor.foregroundTone(bgTone, fContrast);
        }
        if ((fTone - nTone) * expansionDir >= delta) {
        } else {
          fTone = math_utils.MathUtils.clampDouble(0.0, 100.0, nTone + delta * expansionDir);
          if ((fTone - nTone) * expansionDir >= delta) {
          } else {
            nTone = math_utils.MathUtils.clampDouble(0.0, 100.0, fTone - delta * expansionDir);
          }
        }
        if (50 <= nTone && nTone < 60) {
          if (expansionDir > 0) {
            nTone = 60.0;
            fTone = math.max(T.double(), fTone, nTone + delta * expansionDir);
          } else {
            nTone = 49.0;
            fTone = math.min(T.double(), fTone, nTone + delta * expansionDir);
          }
        } else if (50 <= fTone && fTone < 60) {
          if (stayTogether) {
            if (expansionDir > 0) {
              nTone = 60.0;
              fTone = math.max(T.double(), fTone, nTone + delta * expansionDir);
            } else {
              nTone = 49.0;
              fTone = math.min(T.double(), fTone, nTone + delta * expansionDir);
            }
          } else {
            if (expansionDir > 0) {
              fTone = 60.0;
            } else {
              fTone = 49.0;
            }
          }
        }
        return amNearer ? nTone : fTone;
      } else {
        let answer = (t$362$0 = scheme, this.tone(t$362$0));
        if (this.background == null) {
          return answer;
        }
        let bgTone = dart.nullCheck(this.background)(scheme).getTone(scheme);
        let desiredRatio = dart.nullCheck(this.contrastCurve).get(scheme.contrastLevel);
        if (contrast.Contrast.ratioOfTones(bgTone, answer) >= desiredRatio) {
        } else {
          answer = dynamic_color.DynamicColor.foregroundTone(bgTone, desiredRatio);
        }
        if (decreasingContrast) {
          answer = dynamic_color.DynamicColor.foregroundTone(bgTone, desiredRatio);
        }
        if (this.isBackground && 50 <= answer && answer < 60) {
          if (contrast.Contrast.ratioOfTones(49.0, bgTone) >= desiredRatio) {
            answer = 49.0;
          } else {
            answer = 60.0;
          }
        }
        if (this.secondBackground != null) {
          let bgTone1 = dart.nullCheck(this.background)(scheme).getTone(scheme);
          let bgTone2 = dart.nullCheck(this.secondBackground)(scheme).getTone(scheme);
          let upper = math.max(T.double(), bgTone1, bgTone2);
          let lower = math.min(T.double(), bgTone1, bgTone2);
          if (contrast.Contrast.ratioOfTones(upper, answer) >= desiredRatio && contrast.Contrast.ratioOfTones(lower, answer) >= desiredRatio) {
            return answer;
          }
          let lightOption = contrast.Contrast.lighter({tone: upper, ratio: desiredRatio});
          let darkOption = contrast.Contrast.darker({tone: lower, ratio: desiredRatio});
          let availables = [];
          if (lightOption !== -1) availables[$add](lightOption);
          if (darkOption !== -1) availables[$add](darkOption);
          let prefersLight = dynamic_color.DynamicColor.tonePrefersLightForeground(bgTone1) || dynamic_color.DynamicColor.tonePrefersLightForeground(bgTone2);
          if (prefersLight) {
            return lightOption < 0 ? 100.0 : lightOption;
          }
          if (availables[$length] === 1) {
            return T.double()[_as](availables[$_get](0));
          }
          return darkOption < 0 ? 0.0 : darkOption;
        }
        return answer;
      }
    }
    static foregroundTone(bgTone, ratio) {
      let lighterTone = contrast.Contrast.lighterUnsafe({tone: bgTone, ratio: ratio});
      let darkerTone = contrast.Contrast.darkerUnsafe({tone: bgTone, ratio: ratio});
      let lighterRatio = contrast.Contrast.ratioOfTones(lighterTone, bgTone);
      let darkerRatio = contrast.Contrast.ratioOfTones(darkerTone, bgTone);
      let preferLighter = dynamic_color.DynamicColor.tonePrefersLightForeground(bgTone);
      if (preferLighter) {
        let negligibleDifference = (lighterRatio - darkerRatio)[$abs]() < 0.1 && lighterRatio < ratio && darkerRatio < ratio;
        return lighterRatio >= ratio || lighterRatio >= darkerRatio || negligibleDifference ? lighterTone : darkerTone;
      } else {
        return darkerRatio >= ratio || darkerRatio >= lighterRatio ? darkerTone : lighterTone;
      }
    }
    static enableLightForeground(tone) {
      if (dynamic_color.DynamicColor.tonePrefersLightForeground(tone) && !dynamic_color.DynamicColor.toneAllowsLightForeground(tone)) {
        return 49.0;
      }
      return tone;
    }
    static tonePrefersLightForeground(tone) {
      return tone[$round]() < 60;
    }
    static toneAllowsLightForeground(tone) {
      return tone[$round]() <= 49;
    }
  };
  (dynamic_color.DynamicColor.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let palette = opts && 'palette' in opts ? opts.palette : null;
    let tone = opts && 'tone' in opts ? opts.tone : null;
    let isBackground = opts && 'isBackground' in opts ? opts.isBackground : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let secondBackground = opts && 'secondBackground' in opts ? opts.secondBackground : null;
    let contrastCurve = opts && 'contrastCurve' in opts ? opts.contrastCurve : null;
    let toneDeltaPair = opts && 'toneDeltaPair' in opts ? opts.toneDeltaPair : null;
    this[_hctCache] = new (G.LinkedMapOfDynamicScheme$Hct()).new();
    this[name$] = name;
    this[palette$] = palette;
    this[tone$] = tone;
    this[isBackground$] = isBackground;
    this[background$] = background;
    this[secondBackground$] = secondBackground;
    this[contrastCurve$] = contrastCurve;
    this[toneDeltaPair$] = toneDeltaPair;
    ;
  }).prototype = dynamic_color.DynamicColor.prototype;
  dart.addRtiResources(dynamic_color.DynamicColor, ["material_color_utilities__dynamiccolor__dynamic_color|DynamicColor"]);
  dart.setMethodSignature(dynamic_color.DynamicColor, () => dart.global.Object.setPrototypeOf({
    getArgb: T.DynamicSchemeToint(),
    getHct: T.DynamicSchemeToHct(),
    getTone: T.DynamicSchemeTodouble()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(dynamic_color.DynamicColor))));
  dart.setStaticMethodSignature(dynamic_color.DynamicColor, () => ['fromPalette', 'foregroundTone', 'enableLightForeground', 'tonePrefersLightForeground', 'toneAllowsLightForeground']);
  dart.setLibraryUri(dynamic_color.DynamicColor, I[2]);
  dart.setFieldSignature(dynamic_color.DynamicColor, () => dart.global.Object.setPrototypeOf({
    name: {type: T.String(), isConst: false, isFinal: true, libraryUri: I[1]},
    palette: {type: T.DynamicSchemeToTonalPalette(), isConst: false, isFinal: true},
    tone: {type: T.DynamicSchemeTodouble(), isConst: false, isFinal: true},
    isBackground: {type: T.bool(), isConst: false, isFinal: true, libraryUri: I[1]},
    background: {type: T.DynamicSchemeToNDynamicColor(), isConst: false, isFinal: true},
    secondBackground: {type: T.DynamicSchemeToNDynamicColor(), isConst: false, isFinal: true},
    contrastCurve: {type: T.ContrastCurveN(), isConst: false, isFinal: true, libraryUri: I[9]},
    toneDeltaPair: {type: T.DynamicSchemeToNToneDeltaPair(), isConst: false, isFinal: true},
    [_hctCache]: {type: T.MapOfDynamicScheme$Hct(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(dynamic_color.DynamicColor))));
  dart.moduleConstCaches.set("packages/material_color_utilities/dynamiccolor/src/tone_delta_pair.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"material_color_utilities__dynamiccolor__src__tone_delta_pair|TonePolarity":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"material_color_utilities__dynamiccolor__variant|Variant":{"core|_Enum":[],"core|Enum":[]},"core|Map":{"Map.K":"1","Map.V":"2"}}'));
  dart.trackLibraries("packages/material_color_utilities/dynamiccolor/src/tone_delta_pair.dart", {
    "package:material_color_utilities/dynamiccolor/src/tone_delta_pair.dart": tone_delta_pair,
    "package:material_color_utilities/dynamiccolor/material_dynamic_colors.dart": material_dynamic_colors,
    "package:material_color_utilities/dynamiccolor/dynamic_scheme.dart": dynamic_scheme,
    "package:material_color_utilities/dynamiccolor/dynamic_color.dart": dynamic_color
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["tone_delta_pair.dart","../material_dynamic_colors.dart","../dynamic_scheme.dart","../dynamic_color.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../packages/material_color_utilities/dynamiccolor/src/tone_delta_pair.dart.lib.js"}');
  // Exports:
  return {
    dynamiccolor__src__tone_delta_pair: tone_delta_pair,
    dynamiccolor__material_dynamic_colors: material_dynamic_colors,
    dynamiccolor__dynamic_scheme: dynamic_scheme,
    dynamiccolor__dynamic_color: dynamic_color
  };
}));

//# sourceMappingURL=tone_delta_pair.dart.lib.js.map
