// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.5.3 (stable) (Wed Sep 11 16:22:47 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/material/material_state_mixin.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/widgets/unique_widget.dart', 'packages/flutter/src/foundation/_platform_web.dart'], (function load__packages__flutter__src__material__material_state_mixin_dart(dart_sdk, packages__flutter__src__widgets__unique_widget$46dart, packages__flutter__src__foundation___platform_web$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const widget_state = packages__flutter__src__widgets__unique_widget$46dart.src__widgets__widget_state;
  const framework = packages__flutter__src__widgets__unique_widget$46dart.src__widgets__framework;
  const diagnostics = packages__flutter__src__foundation___platform_web$46dart.src__foundation__diagnostics;
  var material_state_mixin = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T$ = {
    WidgetState: () => (T$.WidgetState = dart.constFn(dart_rti.findType("flutter__src__widgets__widget_state|WidgetState")))(),
    boolTovoid: () => (T$.boolTovoid = dart.constFn(dart_rti.findType("~(core|bool)")))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    SetOfWidgetState: () => (T$.SetOfWidgetState = dart.constFn(dart_rti.findType("core|Set<flutter__src__widgets__widget_state|WidgetState>")))(),
    WidgetState__ToFn: () => (T$.WidgetState__ToFn = dart.constFn(dart_rti.findType("~(core|bool)(flutter__src__widgets__widget_state|WidgetState{onChanged:~(core|bool)?})")))(),
    WidgetStateAndboolTovoid: () => (T$.WidgetStateAndboolTovoid = dart.constFn(dart_rti.findType("~(flutter__src__widgets__widget_state|WidgetState,core|bool)")))(),
    WidgetStateTovoid: () => (T$.WidgetStateTovoid = dart.constFn(dart_rti.findType("~(flutter__src__widgets__widget_state|WidgetState)")))(),
    bool: () => (T$.bool = dart.constFn(dart_rti.findType("core|bool")))()
  };
  var G = {
    LinkedHashSetOfWidgetState: () => (G.LinkedHashSetOfWidgetState = dart.constFn(collection.LinkedHashSet$(T$.WidgetState())))(),
    DiagnosticsPropertyOfSetOfWidgetState: () => (G.DiagnosticsPropertyOfSetOfWidgetState = dart.constFn(diagnostics.DiagnosticsProperty$(T$.SetOfWidgetState())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:flutter/src/material/material_state_mixin.dart",
    "dart:core"
  ];
  var materialStates = dart.privateName(material_state_mixin, "MaterialStateMixin.materialStates");
  material_state_mixin.MaterialStateMixin$ = dart.generic(T => {
    var __t$StateOfT = () => (__t$StateOfT = dart.constFn(framework.State$(T)))();
    class MaterialStateMixin extends __t$StateOfT() {}
    MaterialStateMixin[dart.mixinOn] = State => class MaterialStateMixin extends State {
      get materialStates() {
        return this[materialStates];
      }
      set materialStates(value) {
        this[materialStates] = value;
      }
      updateMaterialState(key, opts) {
        let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
        return dart.fn(value => {
          let t$360;
          if (this.materialStates.contains(key) === value) {
            return;
          }
          this.setMaterialState(key, value);
          t$360 = onChanged;
          t$360 == null ? null : t$360(value);
        }, T$.boolTovoid());
      }
      setMaterialState(state, isSet) {
        return isSet ? this.addMaterialState(state) : this.removeMaterialState(state);
      }
      addMaterialState(state) {
        if (this.materialStates.add(state)) {
          this.setState(dart.fn(() => {
          }, T$.VoidTovoid()));
        }
      }
      removeMaterialState(state) {
        if (this.materialStates.remove(state)) {
          this.setState(dart.fn(() => {
          }, T$.VoidTovoid()));
        }
      }
      get isDisabled() {
        return this.materialStates.contains(widget_state.WidgetState.disabled);
      }
      get isDragged() {
        return this.materialStates.contains(widget_state.WidgetState.dragged);
      }
      get isErrored() {
        return this.materialStates.contains(widget_state.WidgetState.error);
      }
      get isFocused() {
        return this.materialStates.contains(widget_state.WidgetState.focused);
      }
      get isHovered() {
        return this.materialStates.contains(widget_state.WidgetState.hovered);
      }
      get isPressed() {
        return this.materialStates.contains(widget_state.WidgetState.pressed);
      }
      get isScrolledUnder() {
        return this.materialStates.contains(widget_state.WidgetState.scrolledUnder);
      }
      get isSelected() {
        return this.materialStates.contains(widget_state.WidgetState.selected);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (G.DiagnosticsPropertyOfSetOfWidgetState()).new("materialStates", this.materialStates, {defaultValue: G.LinkedHashSetOfWidgetState().new()}));
      }
    };
    (MaterialStateMixin[dart.mixinNew] = function() {
      this[materialStates] = G.LinkedHashSetOfWidgetState().new();
    }).prototype = MaterialStateMixin.prototype;
    dart.addRtiResources(MaterialStateMixin, ["flutter__src__material__material_state_mixin|MaterialStateMixin"]);
    dart.setMethodSignature(MaterialStateMixin, () => dart.global.Object.setPrototypeOf({
      updateMaterialState: T$.WidgetState__ToFn(),
      setMaterialState: T$.WidgetStateAndboolTovoid(),
      addMaterialState: T$.WidgetStateTovoid(),
      removeMaterialState: T$.WidgetStateTovoid()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(MaterialStateMixin))));
    dart.setGetterSignature(MaterialStateMixin, () => dart.global.Object.setPrototypeOf({
      isDisabled: T$.bool(),
      isDragged: T$.bool(),
      isErrored: T$.bool(),
      isFocused: T$.bool(),
      isHovered: T$.bool(),
      isPressed: T$.bool(),
      isScrolledUnder: T$.bool(),
      isSelected: T$.bool()
    }, dart.getGetters(dart.global.Object.getPrototypeOf(MaterialStateMixin))));
    dart.setLibraryUri(MaterialStateMixin, I[0]);
    dart.setFieldSignature(MaterialStateMixin, () => dart.global.Object.setPrototypeOf({materialStates: {type: T$.SetOfWidgetState(), isConst: false, isFinal: false, libraryUri: I[1]}}, dart.getFields(dart.global.Object.getPrototypeOf(MaterialStateMixin))));
    return MaterialStateMixin;
  });
  material_state_mixin.MaterialStateMixin = material_state_mixin.MaterialStateMixin$();
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__widgets__widget_state|WidgetState":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"flutter__src__material__material_state_mixin|MaterialStateMixin":{"MaterialStateMixin.T":"1","State.T":"1","flutter__src__widgets__framework|State":["1"],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__widgets__framework|State":{"State.T":"1","flutter__src__foundation__diagnostics|Diagnosticable":[]}}'));
  dart.trackLibraries("packages/flutter/src/material/material_state_mixin.dart", {
    "package:flutter/src/material/material_state_mixin.dart": material_state_mixin
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["material_state_mixin.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8DqB;;;;;;0BA8CkC;YAA0B;AAC7E,cAAO,SAAM;;AACX,cAAI,AAAe,AAAc,6BAAL,GAAG,MAAK,KAAK;AACvC;;AAEF,gCAAiB,GAAG,EAAE,KAAK;AAC3B,2BAAS;0BAAT,OAAW,MAAK,KAAK;;MAEzB;uBAIoC,OAAY;AAC9C,cAAO,MAAK,GAAG,sBAAiB,KAAK,IAAI,yBAAoB,KAAK,CAAtD;MACd;uBAIoC;AAClC,YAAI,AAAe,wBAAI,KAAK;AAC1B,wBAAS;;;MAEb;0BAIuC;AACrC,YAAI,AAAe,2BAAO,KAAK;AAC7B,wBAAS;;;MAEb;;AAGuB,cAAA,AAAe,8BAAuB;MAAS;;AAGhD,cAAA,AAAe,8BAAuB;MAAQ;;AAG9C,cAAA,AAAe,8BAAuB;MAAM;;AAG5C,cAAA,AAAe,8BAAuB;MAAQ;;AAG9C,cAAA,AAAe,8BAAuB;MAAQ;;AAG9C,cAAA,AAAe,8BAAuB;MAAQ;;AAGxC,cAAA,AAAe,8BAAuB;MAAc;;AAGzD,cAAA,AAAe,8BAAuB;MAAS;0BAGjB;AAC7C,kCAAoB,UAAU;AACzB,QAAX,UAAU,KAAK,oDAAwC,kBAAkB,oCAA6C;MACxH;;;MA1GmB,uBAAgC","file":"../../../../../../../packages/flutter/src/material/material_state_mixin.dart.lib.js"}');
  // Exports:
  return {
    src__material__material_state_mixin: material_state_mixin
  };
}));

//# sourceMappingURL=material_state_mixin.dart.lib.js.map
