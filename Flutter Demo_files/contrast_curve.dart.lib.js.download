// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.5.3 (stable) (Wed Sep 11 16:22:47 2024 +0000) on "windows_x64"
// Module: packages/material_color_utilities/dynamiccolor/src/contrast_curve.dart
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/material_color_utilities/utils/math_utils.dart'], (function load__packages__material_color_utilities__dynamiccolor__src__contrast_curve_dart(dart_sdk, packages__material_color_utilities__utils__math_utils$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const math_utils = packages__material_color_utilities__utils__math_utils$46dart.utils__math_utils;
  var contrast_curve = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    doubleTodouble: () => (T.doubleTodouble = dart.constFn(dart_rti.findType("core|double(core|double)")))(),
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:material_color_utilities/dynamiccolor/src/contrast_curve.dart",
    "dart:core"
  ];
  var low$ = dart.privateName(contrast_curve, "ContrastCurve.low");
  var normal$ = dart.privateName(contrast_curve, "ContrastCurve.normal");
  var medium$ = dart.privateName(contrast_curve, "ContrastCurve.medium");
  var high$ = dart.privateName(contrast_curve, "ContrastCurve.high");
  contrast_curve.ContrastCurve = class ContrastCurve extends core.Object {
    get low() {
      return this[low$];
    }
    set low(value) {
      super.low = value;
    }
    get normal() {
      return this[normal$];
    }
    set normal(value) {
      super.normal = value;
    }
    get medium() {
      return this[medium$];
    }
    set medium(value) {
      super.medium = value;
    }
    get high() {
      return this[high$];
    }
    set high(value) {
      super.high = value;
    }
    static ['_#new#tearOff'](low, normal, medium, high) {
      return new contrast_curve.ContrastCurve.new(low, normal, medium, high);
    }
    get(contrastLevel) {
      if (contrastLevel <= -1.0) {
        return this.low;
      } else if (contrastLevel < 0.0) {
        return math_utils.MathUtils.lerp(this.low, this.normal, (contrastLevel - -1) / 1);
      } else if (contrastLevel < 0.5) {
        return math_utils.MathUtils.lerp(this.normal, this.medium, (contrastLevel - 0) / 0.5);
      } else if (contrastLevel < 1.0) {
        return math_utils.MathUtils.lerp(this.medium, this.high, (contrastLevel - 0.5) / 0.5);
      } else {
        return this.high;
      }
    }
  };
  (contrast_curve.ContrastCurve.new = function(low, normal, medium, high) {
    this[low$] = low;
    this[normal$] = normal;
    this[medium$] = medium;
    this[high$] = high;
    ;
  }).prototype = contrast_curve.ContrastCurve.prototype;
  dart.addRtiResources(contrast_curve.ContrastCurve, ["material_color_utilities__dynamiccolor__src__contrast_curve|ContrastCurve"]);
  dart.setMethodSignature(contrast_curve.ContrastCurve, () => dart.global.Object.setPrototypeOf({get: T.doubleTodouble()}, dart.getMethods(dart.global.Object.getPrototypeOf(contrast_curve.ContrastCurve))));
  dart.setLibraryUri(contrast_curve.ContrastCurve, I[0]);
  dart.setFieldSignature(contrast_curve.ContrastCurve, () => dart.global.Object.setPrototypeOf({
    low: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    normal: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    medium: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    high: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(contrast_curve.ContrastCurve))));
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"}}'));
  dart.trackLibraries("packages/material_color_utilities/dynamiccolor/src/contrast_curve.dart", {
    "package:material_color_utilities/dynamiccolor/src/contrast_curve.dart": contrast_curve
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["contrast_curve.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsBe;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;;QAoBK;AAChB,UAAI,aAAa,IAAI,CAAC;AACpB,cAAO;YACF,KAAI,aAAa,GAAG;AACzB,cAAiB,2BAAK,UAAK,cAAS,aAAa,GAAI,CAAC,KAAM;YACvD,KAAI,aAAa,GAAG;AACzB,cAAiB,2BAAK,aAAQ,cAAS,aAAa,GAAG,KAAK;YACvD,KAAI,aAAa,GAAG;AACzB,cAAiB,2BAAK,aAAQ,YAAO,aAAa,GAAG,OAAO;;AAE5D,cAAO;;IAEX;;+CAvBO,KACA,QACA,QACA;IAHA;IACA;IACA;IACA;;EACN","file":"../../../../../../../../../../../../packages/material_color_utilities/dynamiccolor/src/contrast_curve.dart.lib.js"}');
  // Exports:
  return {
    dynamiccolor__src__contrast_curve: contrast_curve
  };
}));

//# sourceMappingURL=contrast_curve.dart.lib.js.map
